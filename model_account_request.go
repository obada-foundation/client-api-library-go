/*
OBADA API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
Contact: techops@obada.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/obada-foundation/client-api-library-go

import (
	"encoding/json"
)

// AccountRequest Set account specific data
type AccountRequest struct {
	// Associative account name
	AccountName *string `json:"account_name,omitempty"`
}

// NewAccountRequest instantiates a new AccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountRequest() *AccountRequest {
	this := AccountRequest{}
	return &this
}

// NewAccountRequestWithDefaults instantiates a new AccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountRequestWithDefaults() *AccountRequest {
	this := AccountRequest{}
	return &this
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *AccountRequest) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRequest) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *AccountRequest) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *AccountRequest) SetAccountName(v string) {
	o.AccountName = &v
}

func (o AccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	return json.Marshal(toSerialize)
}

type NullableAccountRequest struct {
	value *AccountRequest
	isSet bool
}

func (v NullableAccountRequest) Get() *AccountRequest {
	return v.value
}

func (v *NullableAccountRequest) Set(val *AccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRequest(val *AccountRequest) *NullableAccountRequest {
	return &NullableAccountRequest{value: val, isSet: true}
}

func (v NullableAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


