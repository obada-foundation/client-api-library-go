/*
 * OBADA Client Helper API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: techops@obada.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/obada-foundation/client-api-library-go

import (
	"encoding/json"
	"time"
)

// ClientObit struct for ClientObit
type ClientObit struct {
	Id *int32 `json:"id,omitempty"`
	ObitDid *string `json:"obit_did,omitempty"`
	Usn *string `json:"usn,omitempty"`
	OwnerDid *string `json:"owner_did,omitempty"`
	// Represent available Obit statuses:   - FUNCTIONAL   - NON_FUNCTIONAL   - DISPOSED   - STOLEN   - DISABLED_BY_OWNER 
	ObitStatus *string `json:"obit_status,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	PartNumber *string `json:"part_number,omitempty"`
	SerialNumberHash *string `json:"serial_number_hash,omitempty"`
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	RootHash *string `json:"root_hash,omitempty"`
	// Get description from Rohi
	Metadata *[]map[string]interface{} `json:"metadata,omitempty"`
	// To generate this link, take an SHA-256 hash of the document, and link to it as https://www.some-website.com?h1=hash-of-document. Note this does not yet adhere to the hashlink standard. 
	Documents *[]map[string]interface{} `json:"documents,omitempty"`
	// Same as metadata but bigger. Key (string) => Value (string) (hash per line sha256(key + value))
	StructuredData *[]map[string]interface{} `json:"structured_data,omitempty"`
}

// NewClientObit instantiates a new ClientObit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientObit() *ClientObit {
	this := ClientObit{}
	return &this
}

// NewClientObitWithDefaults instantiates a new ClientObit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientObitWithDefaults() *ClientObit {
	this := ClientObit{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientObit) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientObit) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClientObit) SetId(v int32) {
	o.Id = &v
}

// GetObitDid returns the ObitDid field value if set, zero value otherwise.
func (o *ClientObit) GetObitDid() string {
	if o == nil || o.ObitDid == nil {
		var ret string
		return ret
	}
	return *o.ObitDid
}

// GetObitDidOk returns a tuple with the ObitDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetObitDidOk() (*string, bool) {
	if o == nil || o.ObitDid == nil {
		return nil, false
	}
	return o.ObitDid, true
}

// HasObitDid returns a boolean if a field has been set.
func (o *ClientObit) HasObitDid() bool {
	if o != nil && o.ObitDid != nil {
		return true
	}

	return false
}

// SetObitDid gets a reference to the given string and assigns it to the ObitDid field.
func (o *ClientObit) SetObitDid(v string) {
	o.ObitDid = &v
}

// GetUsn returns the Usn field value if set, zero value otherwise.
func (o *ClientObit) GetUsn() string {
	if o == nil || o.Usn == nil {
		var ret string
		return ret
	}
	return *o.Usn
}

// GetUsnOk returns a tuple with the Usn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetUsnOk() (*string, bool) {
	if o == nil || o.Usn == nil {
		return nil, false
	}
	return o.Usn, true
}

// HasUsn returns a boolean if a field has been set.
func (o *ClientObit) HasUsn() bool {
	if o != nil && o.Usn != nil {
		return true
	}

	return false
}

// SetUsn gets a reference to the given string and assigns it to the Usn field.
func (o *ClientObit) SetUsn(v string) {
	o.Usn = &v
}

// GetOwnerDid returns the OwnerDid field value if set, zero value otherwise.
func (o *ClientObit) GetOwnerDid() string {
	if o == nil || o.OwnerDid == nil {
		var ret string
		return ret
	}
	return *o.OwnerDid
}

// GetOwnerDidOk returns a tuple with the OwnerDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetOwnerDidOk() (*string, bool) {
	if o == nil || o.OwnerDid == nil {
		return nil, false
	}
	return o.OwnerDid, true
}

// HasOwnerDid returns a boolean if a field has been set.
func (o *ClientObit) HasOwnerDid() bool {
	if o != nil && o.OwnerDid != nil {
		return true
	}

	return false
}

// SetOwnerDid gets a reference to the given string and assigns it to the OwnerDid field.
func (o *ClientObit) SetOwnerDid(v string) {
	o.OwnerDid = &v
}

// GetObitStatus returns the ObitStatus field value if set, zero value otherwise.
func (o *ClientObit) GetObitStatus() string {
	if o == nil || o.ObitStatus == nil {
		var ret string
		return ret
	}
	return *o.ObitStatus
}

// GetObitStatusOk returns a tuple with the ObitStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetObitStatusOk() (*string, bool) {
	if o == nil || o.ObitStatus == nil {
		return nil, false
	}
	return o.ObitStatus, true
}

// HasObitStatus returns a boolean if a field has been set.
func (o *ClientObit) HasObitStatus() bool {
	if o != nil && o.ObitStatus != nil {
		return true
	}

	return false
}

// SetObitStatus gets a reference to the given string and assigns it to the ObitStatus field.
func (o *ClientObit) SetObitStatus(v string) {
	o.ObitStatus = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *ClientObit) GetManufacturer() string {
	if o == nil || o.Manufacturer == nil {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetManufacturerOk() (*string, bool) {
	if o == nil || o.Manufacturer == nil {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *ClientObit) HasManufacturer() bool {
	if o != nil && o.Manufacturer != nil {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *ClientObit) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *ClientObit) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *ClientObit) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *ClientObit) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetSerialNumberHash returns the SerialNumberHash field value if set, zero value otherwise.
func (o *ClientObit) GetSerialNumberHash() string {
	if o == nil || o.SerialNumberHash == nil {
		var ret string
		return ret
	}
	return *o.SerialNumberHash
}

// GetSerialNumberHashOk returns a tuple with the SerialNumberHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetSerialNumberHashOk() (*string, bool) {
	if o == nil || o.SerialNumberHash == nil {
		return nil, false
	}
	return o.SerialNumberHash, true
}

// HasSerialNumberHash returns a boolean if a field has been set.
func (o *ClientObit) HasSerialNumberHash() bool {
	if o != nil && o.SerialNumberHash != nil {
		return true
	}

	return false
}

// SetSerialNumberHash gets a reference to the given string and assigns it to the SerialNumberHash field.
func (o *ClientObit) SetSerialNumberHash(v string) {
	o.SerialNumberHash = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *ClientObit) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *ClientObit) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *ClientObit) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetRootHash returns the RootHash field value if set, zero value otherwise.
func (o *ClientObit) GetRootHash() string {
	if o == nil || o.RootHash == nil {
		var ret string
		return ret
	}
	return *o.RootHash
}

// GetRootHashOk returns a tuple with the RootHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetRootHashOk() (*string, bool) {
	if o == nil || o.RootHash == nil {
		return nil, false
	}
	return o.RootHash, true
}

// HasRootHash returns a boolean if a field has been set.
func (o *ClientObit) HasRootHash() bool {
	if o != nil && o.RootHash != nil {
		return true
	}

	return false
}

// SetRootHash gets a reference to the given string and assigns it to the RootHash field.
func (o *ClientObit) SetRootHash(v string) {
	o.RootHash = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ClientObit) GetMetadata() []map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetMetadataOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ClientObit) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []map[string]interface{} and assigns it to the Metadata field.
func (o *ClientObit) SetMetadata(v []map[string]interface{}) {
	o.Metadata = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *ClientObit) GetDocuments() []map[string]interface{} {
	if o == nil || o.Documents == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetDocumentsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Documents == nil {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *ClientObit) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []map[string]interface{} and assigns it to the Documents field.
func (o *ClientObit) SetDocuments(v []map[string]interface{}) {
	o.Documents = &v
}

// GetStructuredData returns the StructuredData field value if set, zero value otherwise.
func (o *ClientObit) GetStructuredData() []map[string]interface{} {
	if o == nil || o.StructuredData == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.StructuredData
}

// GetStructuredDataOk returns a tuple with the StructuredData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientObit) GetStructuredDataOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.StructuredData == nil {
		return nil, false
	}
	return o.StructuredData, true
}

// HasStructuredData returns a boolean if a field has been set.
func (o *ClientObit) HasStructuredData() bool {
	if o != nil && o.StructuredData != nil {
		return true
	}

	return false
}

// SetStructuredData gets a reference to the given []map[string]interface{} and assigns it to the StructuredData field.
func (o *ClientObit) SetStructuredData(v []map[string]interface{}) {
	o.StructuredData = &v
}

func (o ClientObit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ObitDid != nil {
		toSerialize["obit_did"] = o.ObitDid
	}
	if o.Usn != nil {
		toSerialize["usn"] = o.Usn
	}
	if o.OwnerDid != nil {
		toSerialize["owner_did"] = o.OwnerDid
	}
	if o.ObitStatus != nil {
		toSerialize["obit_status"] = o.ObitStatus
	}
	if o.Manufacturer != nil {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if o.PartNumber != nil {
		toSerialize["part_number"] = o.PartNumber
	}
	if o.SerialNumberHash != nil {
		toSerialize["serial_number_hash"] = o.SerialNumberHash
	}
	if o.ModifiedAt != nil {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if o.RootHash != nil {
		toSerialize["root_hash"] = o.RootHash
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	if o.StructuredData != nil {
		toSerialize["structured_data"] = o.StructuredData
	}
	return json.Marshal(toSerialize)
}

type NullableClientObit struct {
	value *ClientObit
	isSet bool
}

func (v NullableClientObit) Get() *ClientObit {
	return v.value
}

func (v *NullableClientObit) Set(val *ClientObit) {
	v.value = val
	v.isSet = true
}

func (v NullableClientObit) IsSet() bool {
	return v.isSet
}

func (v *NullableClientObit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientObit(val *ClientObit) *NullableClientObit {
	return &NullableClientObit{value: val, isSet: true}
}

func (v NullableClientObit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientObit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


