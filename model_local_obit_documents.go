/*
 * OBADA Client Helper API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: techops@obada.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LocalObitDocuments Document hashlink
type LocalObitDocuments struct {
	// Associative name of hashlink
	Name string `json:"name"`
	// Hashlink
	Hashlink string `json:"hashlink"`
}

// NewLocalObitDocuments instantiates a new LocalObitDocuments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalObitDocuments(name string, hashlink string, ) *LocalObitDocuments {
	this := LocalObitDocuments{}
	this.Name = name
	this.Hashlink = hashlink
	return &this
}

// NewLocalObitDocumentsWithDefaults instantiates a new LocalObitDocuments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalObitDocumentsWithDefaults() *LocalObitDocuments {
	this := LocalObitDocuments{}
	return &this
}

// GetName returns the Name field value
func (o *LocalObitDocuments) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LocalObitDocuments) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LocalObitDocuments) SetName(v string) {
	o.Name = v
}

// GetHashlink returns the Hashlink field value
func (o *LocalObitDocuments) GetHashlink() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Hashlink
}

// GetHashlinkOk returns a tuple with the Hashlink field value
// and a boolean to check if the value has been set.
func (o *LocalObitDocuments) GetHashlinkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Hashlink, true
}

// SetHashlink sets field value
func (o *LocalObitDocuments) SetHashlink(v string) {
	o.Hashlink = v
}

func (o LocalObitDocuments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["hashlink"] = o.Hashlink
	}
	return json.Marshal(toSerialize)
}

type NullableLocalObitDocuments struct {
	value *LocalObitDocuments
	isSet bool
}

func (v NullableLocalObitDocuments) Get() *LocalObitDocuments {
	return v.value
}

func (v *NullableLocalObitDocuments) Set(val *LocalObitDocuments) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalObitDocuments) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalObitDocuments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalObitDocuments(val *LocalObitDocuments) *NullableLocalObitDocuments {
	return &NullableLocalObitDocuments{value: val, isSet: true}
}

func (v NullableLocalObitDocuments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalObitDocuments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


