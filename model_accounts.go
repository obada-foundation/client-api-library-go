/*
OBADA API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
Contact: techops@obada.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/obada-foundation/client-api-library-go

import (
	"encoding/json"
)

// Accounts struct for Accounts
type Accounts struct {
	HdAccounts []Account `json:"hd_accounts,omitempty"`
	ImportedAccounts []Account `json:"imported_accounts,omitempty"`
}

// NewAccounts instantiates a new Accounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccounts() *Accounts {
	this := Accounts{}
	return &this
}

// NewAccountsWithDefaults instantiates a new Accounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsWithDefaults() *Accounts {
	this := Accounts{}
	return &this
}

// GetHdAccounts returns the HdAccounts field value if set, zero value otherwise.
func (o *Accounts) GetHdAccounts() []Account {
	if o == nil || o.HdAccounts == nil {
		var ret []Account
		return ret
	}
	return o.HdAccounts
}

// GetHdAccountsOk returns a tuple with the HdAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetHdAccountsOk() ([]Account, bool) {
	if o == nil || o.HdAccounts == nil {
		return nil, false
	}
	return o.HdAccounts, true
}

// HasHdAccounts returns a boolean if a field has been set.
func (o *Accounts) HasHdAccounts() bool {
	if o != nil && o.HdAccounts != nil {
		return true
	}

	return false
}

// SetHdAccounts gets a reference to the given []Account and assigns it to the HdAccounts field.
func (o *Accounts) SetHdAccounts(v []Account) {
	o.HdAccounts = v
}

// GetImportedAccounts returns the ImportedAccounts field value if set, zero value otherwise.
func (o *Accounts) GetImportedAccounts() []Account {
	if o == nil || o.ImportedAccounts == nil {
		var ret []Account
		return ret
	}
	return o.ImportedAccounts
}

// GetImportedAccountsOk returns a tuple with the ImportedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Accounts) GetImportedAccountsOk() ([]Account, bool) {
	if o == nil || o.ImportedAccounts == nil {
		return nil, false
	}
	return o.ImportedAccounts, true
}

// HasImportedAccounts returns a boolean if a field has been set.
func (o *Accounts) HasImportedAccounts() bool {
	if o != nil && o.ImportedAccounts != nil {
		return true
	}

	return false
}

// SetImportedAccounts gets a reference to the given []Account and assigns it to the ImportedAccounts field.
func (o *Accounts) SetImportedAccounts(v []Account) {
	o.ImportedAccounts = v
}

func (o Accounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HdAccounts != nil {
		toSerialize["hd_accounts"] = o.HdAccounts
	}
	if o.ImportedAccounts != nil {
		toSerialize["imported_accounts"] = o.ImportedAccounts
	}
	return json.Marshal(toSerialize)
}

type NullableAccounts struct {
	value *Accounts
	isSet bool
}

func (v NullableAccounts) Get() *Accounts {
	return v.value
}

func (v *NullableAccounts) Set(val *Accounts) {
	v.value = val
	v.isSet = true
}

func (v NullableAccounts) IsSet() bool {
	return v.isSet
}

func (v *NullableAccounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccounts(val *Accounts) *NullableAccounts {
	return &NullableAccounts{value: val, isSet: true}
}

func (v NullableAccounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


