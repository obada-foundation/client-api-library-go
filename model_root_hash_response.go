/*
 * OBADA Client Helper API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: techops@obada.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/obada-foundation/client-api-library-go

import (
	"encoding/json"
)

// RootHashResponse struct for RootHashResponse
type RootHashResponse struct {
	Status *int32 `json:"status,omitempty"`
	RootHash *string `json:"root_hash,omitempty"`
}

// NewRootHashResponse instantiates a new RootHashResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootHashResponse() *RootHashResponse {
	this := RootHashResponse{}
	return &this
}

// NewRootHashResponseWithDefaults instantiates a new RootHashResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootHashResponseWithDefaults() *RootHashResponse {
	this := RootHashResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RootHashResponse) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootHashResponse) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RootHashResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *RootHashResponse) SetStatus(v int32) {
	o.Status = &v
}

// GetRootHash returns the RootHash field value if set, zero value otherwise.
func (o *RootHashResponse) GetRootHash() string {
	if o == nil || o.RootHash == nil {
		var ret string
		return ret
	}
	return *o.RootHash
}

// GetRootHashOk returns a tuple with the RootHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootHashResponse) GetRootHashOk() (*string, bool) {
	if o == nil || o.RootHash == nil {
		return nil, false
	}
	return o.RootHash, true
}

// HasRootHash returns a boolean if a field has been set.
func (o *RootHashResponse) HasRootHash() bool {
	if o != nil && o.RootHash != nil {
		return true
	}

	return false
}

// SetRootHash gets a reference to the given string and assigns it to the RootHash field.
func (o *RootHashResponse) SetRootHash(v string) {
	o.RootHash = &v
}

func (o RootHashResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.RootHash != nil {
		toSerialize["root_hash"] = o.RootHash
	}
	return json.Marshal(toSerialize)
}

type NullableRootHashResponse struct {
	value *RootHashResponse
	isSet bool
}

func (v NullableRootHashResponse) Get() *RootHashResponse {
	return v.value
}

func (v *NullableRootHashResponse) Set(val *RootHashResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRootHashResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRootHashResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootHashResponse(val *RootHashResponse) *NullableRootHashResponse {
	return &NullableRootHashResponse{value: val, isSet: true}
}

func (v NullableRootHashResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootHashResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


