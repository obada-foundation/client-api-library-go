openapi: 3.0.2
info:
  contact:
    email: techops@obada.io
    name: Obada Dev Team
    url: https://www.obada.io
  termsOfService: https://www.obada.io/terms/
  title: OBADA API
  version: 0.0.1
servers:
- description: OBADA Production API
  url: http://obs.node.obada.io
- description: OBADA Staging API
  url: https://dev.node.obada.io
security:
- bearerAuth: []
tags:
- name: Accounts
- name: NFT
- name: Keys
- name: Obit
- name: Utils
paths:
  /accounts/{address}:
    get:
      operationId: account
      parameters:
      - description: OBADA address
        explode: false
        in: path
        name: address
        required: true
        schema:
          example: obada1yxxnd624tgwqm3eyv5smdvjrrydfh9h943qptg
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Returns OBADA account
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Fetches an information about single account
      tags:
      - Accounts
    post:
      operationId: updateAccount
      parameters:
      - description: OBADA address
        explode: false
        in: path
        name: address
        required: true
        schema:
          example: obada1yxxnd624tgwqm3eyv5smdvjrrydfh9h943qptg
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        "201":
          description: Account was updated
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Sets account specific information
      tags:
      - Accounts
  /accounts/{address}/send-coins:
    post:
      operationId: sendCoins
      parameters:
      - description: OBADA address
        explode: false
        in: path
        name: address
        required: true
        schema:
          example: obada1yxxnd624tgwqm3eyv5smdvjrrydfh9h943qptg
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCoinsRequest'
      responses:
        "201":
          description: Coins were sent
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Send coins from selected account
      tags:
      - Accounts
  /accounts/new-account:
    post:
      operationId: newAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        "201":
          description: Account was created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Creates a new OBADA account from HD wallet master key
      tags:
      - Accounts
  /accounts/new-wallet:
    post:
      operationId: newWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MnemonicRequest'
      responses:
        "201":
          description: HD wallet was created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Creates profile HD wallet
      tags:
      - Accounts
  /accounts/mnemonic:
    get:
      operationId: getMnemonic
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewMnemonic'
          description: New mnemonic phrase for wallet seeding
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Fetching an existing mnemonic phrase
      tags:
      - Accounts
  /accounts/new-mnemonic:
    get:
      operationId: newMnemonic
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewMnemonic'
          description: New mnemonic phrase for wallet seeding
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Generate a new mnemonic phrase for seeding wallet
      tags:
      - Accounts
  /accounts/my-balance:
    get:
      operationId: balance
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalance'
          description: Account balance response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Shows account balance of OBADA address
      tags:
      - Accounts
  /accounts:
    get:
      operationId: accounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
          description: Returns all OBADA accounts associated with client-helper profile
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Returns a list of OBADA accounts
      tags:
      - Accounts
  /accounts/export-account:
    post:
      operationId: exportAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportAccountResponse'
          description: Single OBADA account (private key) encrypted with password
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletExistsError'
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Export OBADA account (private key) from client-helper
      tags:
      - Accounts
  /accounts/import-account:
    post:
      operationId: importAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAccountRequest'
      responses:
        "201":
          description: Account was imported
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletExistsError'
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Imports an existing OBADA account (private key) to the client-helper
        user profile
      tags:
      - Accounts
  /accounts/import-wallet:
    post:
      operationId: importWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MnemonicRequest'
      responses:
        "201":
          description: HD wallet was imported
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletExistsError'
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Imports an existing HD wallet to the client-helper user profile
      tags:
      - Accounts
  /accounts/register:
    post:
      description: "Creates a new profile, using JWT uid as a internal user id"
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Created profile response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorized'
          description: The request is not authorized.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Register a new client-helper user profile
      tags:
      - Accounts
  /obit/checksum:
    post:
      description: Generates Obit checksum and provides a log of generation details
      operationId: generateChecksum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateObitChecksumRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateObitChecksumResponse'
          description: Obit checksum response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Generates Obit checksum
      tags:
      - Utils
  /obit/did:
    post:
      description: "Returns the Obit DID for a given device_id, part_number and serial_number\
        \ input."
      operationId: generateDID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateObitDIDRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateObitDIDResponse'
          description: Obit DID response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Generate Obit DID
      tags:
      - Utils
  /obits:
    get:
      description: Implements a fulltext search for obits by "searchTerm".
      operationId: search
      parameters:
      - description: Query argument that used for a fulltext search
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: fe403a1afe16203f4b8bb3a0e72d3e17567897bc15293e4a87b663e441030aea
          type: string
        style: form
      - description: Number of records to skip for pagination.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obits'
          description: List of obits with pagination responded by given arguments.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Search obits by query
      tags:
      - Obit
    post:
      description: Returns Obit with updated checksum if data was changed.
      operationId: save
      requestBody:
        content:
          'application/json:':
            schema:
              $ref: '#/components/schemas/SaveObitRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obit'
          description: ""
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: The submitted entity could not be processed.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Save Obit
      tags:
      - Obit
  /obits/{key}:
    get:
      description: Get a single Obit by given ObitDID or USN
      operationId: get
      parameters:
      - description: The given ObitDID or USN argument
        explode: false
        in: path
        name: key
        required: true
        schema:
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Obit'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: The requested resource could not be found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Get Obit by DID or USN
      tags:
      - Obit
  /obits/{key}/history:
    get:
      description: Shows the history of changes by given Obit with ObitDID or USN
      operationId: history
      parameters:
      - description: The given ObitDID or USN argument
        explode: false
        in: path
        name: key
        required: true
        schema:
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/history_200_response'
          description: Collection of historical changes for given obit
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: The requested resource could not be found.
      summary: Get Obit history by DID or USN
      tags:
      - Obit
  /nft/{key}:
    get:
      operationId: nft
      parameters:
      - description: The given ObitDID or USN argument
        explode: false
        in: path
        name: key
        required: true
        schema:
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFT'
          description: NFT hosted by blockchain
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: The requested resource could not be found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Fetch NFT from OBADA blockchain Node
      tags:
      - NFT
  /nft/{key}/mint:
    post:
      operationId: Mint
      parameters:
      - description: The given ObitDID or USN argument
        explode: false
        in: path
        name: key
        required: true
        schema:
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        style: simple
      responses:
        "201":
          description: Succesfully minted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: The requested resource could not be found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Mints NFT
      tags:
      - NFT
  /nft/{key}/metadata:
    post:
      operationId: UpdateMetadata
      parameters:
      - description: The given ObitDID or USN argument
        explode: false
        in: path
        name: key
        required: true
        schema:
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        style: simple
      responses:
        "200":
          description: Metadata succesfully updated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: The requested resource could not be found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Update NFT metadata
      tags:
      - NFT
  /nft/{key}/send:
    post:
      operationId: send
      parameters:
      - description: The given ObitDID or USN argument
        explode: false
        in: path
        name: key
        required: true
        schema:
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNFTRequest'
      responses:
        "204":
          description: Succesfully transfered
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: The requested resource could not be found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal server error.
      summary: Send NFT to another address
      tags:
      - NFT
components:
  responses:
    Account:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
      description: Returns OBADA account
    ExportAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExportAccountResponse'
      description: Single OBADA account (private key) encrypted with password
    AccountsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Accounts'
      description: Returns all OBADA accounts associated with client-helper profile
    NewMnemonic:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewMnemonic'
      description: New mnemonic phrase for wallet seeding
    AccountBalance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBalance'
      description: Account balance response
    NewProfileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'
      description: Created profile response
    Obit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Obit'
      description: ""
    GenerateObitChecksumResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenerateObitChecksumResponse'
      description: Obit checksum response
    GenerateObitDIDResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenerateObitDIDResponse'
      description: Obit DID response
    ObitHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/history_200_response'
      description: Collection of historical changes for given obit
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
      description: Internal server error.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
      description: The requested resource could not be found.
    NotAuthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorized'
      description: The request is not authorized.
    WalletExistsError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WalletExistsError'
      description: ""
    UnprocessableEntity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableEntity'
      description: The submitted entity could not be processed.
  schemas:
    SendCoinsRequest:
      description: Sending tokens payload
      example:
        amount: amount
        denom: denom
        recepient_address: recepient_address
      properties:
        recepient_address:
          type: string
        amount:
          type: string
        denom:
          type: string
      required:
      - amount
      - denom
      - recepient_address
      type: object
    ExportAccountRequest:
      description: OBADA account export payload
      example:
        address: address
        passphrase: passphrase
      properties:
        address:
          description: OBADA account
          type: string
        passphrase:
          description: Passphrase to decrypt the account
          type: string
      required:
      - private_key
      type: object
    AccountRequest:
      description: Set account specific data
      example:
        account_name: My test account
      properties:
        account_name:
          description: Associative account name
          example: My test account
          type: string
      type: object
    ImportAccountRequest:
      description: OBADA account import payload
      example:
        account_name: My test account
        private_key: private_key
      properties:
        private_key:
          description: OBADA account
          type: string
        account_name:
          description: Associative account name
          example: My test account
          type: string
      required:
      - private_key
      type: object
    MnemonicRequest:
      description: Mnemonic for seeding the wallet response
      example:
        mnemonic: fantasy route flavor zoo laptop rent knife stick fancy flame black
          fan oval stairs express identify crane truly anxiety wave notable gather
          toe tag
        force: false
      properties:
        mnemonic:
          description: Mnemonic for seeding
          example: fantasy route flavor zoo laptop rent knife stick fancy flame black
            fan oval stairs express identify crane truly anxiety wave notable gather
            toe tag
          type: string
        force:
          default: false
          description: "Flag that specify if exisiting wallet should be replaced,\
            \ if false is send then error will be send back"
          type: boolean
      required:
      - mnemonic
      type: object
    RegisterRequest:
      description: Register profile payload
      example:
        email: john.doe@obada.io
      properties:
        email:
          description: "Profile owner email, will be used for verification purpose"
          example: john.doe@obada.io
          type: string
      required:
      - email
      type: object
    GenerateObitDIDRequest:
      description: Generate Obit DID payload
      example:
        part_number: PN123456789
        serial_number: SN123456789
        manufacturer: Apple
      properties:
        manufacturer:
          description: Manufacturer (Required)
          example: Apple
          type: string
        part_number:
          description: Part Number (Required)
          example: PN123456789
          type: string
        serial_number:
          description: Serial Number (Required)
          example: SN123456789
          type: string
      required:
      - manufacturer
      - part_number
      - serial_number
      type: object
    GenerateObitChecksumRequest:
      description: Generate Obit checksum payload
      example:
        metadata_uri: http://somedomain.com/metadata
        metadata_uri_hash: eac615cf446cad706b2364f974cbd3ec90620c52575aa1902418572f5a8d1fb5
        part_number: PN123456789
        serial_number: SN123456789
        trust_anchor_token: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NDc5NDEzNzksImlzcyI6ImFzY2lkaSIsInN1YiI6ImNkZDU1ZDIyLTI3NzAtNDk4Ny05YTI3LTNlNDg1ZDIzMjg1NCIsInZlcmlmeVVybCI6Imh0dHBzOi8vd3d3LmFzY2RpLmNvbS9hcGkvdjEvdmVyaWZ5In0.yEHMUUuJKFZYe04afAsPWEoX35ATb6JQj9aspY_yiY2W3HZKoKHq6rcUV02OL3hptZmByeC02yL-mkczbLLlCQ
        manufacturer: Apple
      properties:
        manufacturer:
          description: Manufacturer (Required)
          example: Apple
          type: string
        part_number:
          description: Part Number (Required)
          example: PN123456789
          type: string
        serial_number:
          description: Serial Number (Required)
          example: SN123456789
          type: string
        metadata_uri:
          description: Metadata URI
          example: http://somedomain.com/metadata
          type: string
        metadata_uri_hash:
          description: Metadata URI Hash
          example: eac615cf446cad706b2364f974cbd3ec90620c52575aa1902418572f5a8d1fb5
          type: string
        trust_anchor_token:
          description: Trust Token
          example: eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NDc5NDEzNzksImlzcyI6ImFzY2lkaSIsInN1YiI6ImNkZDU1ZDIyLTI3NzAtNDk4Ny05YTI3LTNlNDg1ZDIzMjg1NCIsInZlcmlmeVVybCI6Imh0dHBzOi8vd3d3LmFzY2RpLmNvbS9hcGkvdjEvdmVyaWZ5In0.yEHMUUuJKFZYe04afAsPWEoX35ATb6JQj9aspY_yiY2W3HZKoKHq6rcUV02OL3hptZmByeC02yL-mkczbLLlCQ
          type: string
      required:
      - manufacturer
      - part_number
      - serial_number
      type: object
    Obits:
      description: Obits search response
      example:
        data:
        - owner: did:obada:owner:123456
          usn: 2zEz-xLJR
          documents:
          - encrypted: true
            name: Link to device wipe report
            uri: uri
            hash: hash
          - encrypted: true
            name: Link to device wipe report
            uri: uri
            hash: hash
          checksum: checksum
          part_number: MWCN2LL/A
          serial_number_hash: f6fc84c9f21c24907d6bee6eec38cabab5fa9a7be8c4a7827fe9e56f245bd2d5
          trust_anchor_token: trust_anchor_token
          did: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          manufacturer: Sony
        - owner: did:obada:owner:123456
          usn: 2zEz-xLJR
          documents:
          - encrypted: true
            name: Link to device wipe report
            uri: uri
            hash: hash
          - encrypted: true
            name: Link to device wipe report
            uri: uri
            hash: hash
          checksum: checksum
          part_number: MWCN2LL/A
          serial_number_hash: f6fc84c9f21c24907d6bee6eec38cabab5fa9a7be8c4a7827fe9e56f245bd2d5
          trust_anchor_token: trust_anchor_token
          did: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          manufacturer: Sony
        meta:
          per_page: 6
          total: 0
          last_page: 5
          current_page: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/Obit'
          type: array
        meta:
          $ref: '#/components/schemas/Obits_meta'
      type: object
    Obit:
      description: OBADA record.
      example:
        owner: did:obada:owner:123456
        usn: 2zEz-xLJR
        documents:
        - encrypted: true
          name: Link to device wipe report
          uri: uri
          hash: hash
        - encrypted: true
          name: Link to device wipe report
          uri: uri
          hash: hash
        checksum: checksum
        part_number: MWCN2LL/A
        serial_number_hash: f6fc84c9f21c24907d6bee6eec38cabab5fa9a7be8c4a7827fe9e56f245bd2d5
        trust_anchor_token: trust_anchor_token
        did: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
        manufacturer: Sony
      properties:
        did:
          description: OBADA decentralized identifier
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          type: string
        usn:
          description: "Test An 8-12 character “URL Shortened” obit. Create the USN\
            \ by Base(58) encoding the OBIT ID. Take the first 8 characters. Check\
            \ for duplicates. With 16 million OBITs there is a 40% chance of collision.\
            \ If so, add 4 characters. Repeat as necessary until a unique USN is generated.\n"
          example: 2zEz-xLJR
          type: string
        owner:
          description: Owner is the person/entity that owns the obit and the physical
            asset it represents. Format is a DID like did:obada:owner:1234. However
            in the current version only test numbers will be used.
          example: did:obada:owner:123456
          type: string
        manufacturer:
          description: Waiting more specific details from Rohi
          example: Sony
          type: string
        part_number:
          description: "Manufacturer provided. In cases where no part number is provided\
            \ for the product, use model, or the most specific ID available from the\
            \ manufacturer. MWCN2LL/A (an iPhone 11 Pro, Silver, 256GB, model A2160)"
          example: MWCN2LL/A
          type: string
        serial_number_hash:
          description: Serial number hashed with sha256 hash function
          example: f6fc84c9f21c24907d6bee6eec38cabab5fa9a7be8c4a7827fe9e56f245bd2d5
          type: string
        trust_anchor_token:
          description: JWT token from the trust anchor
          type: string
        documents:
          description: Documents that are attached to Obit
          items:
            $ref: '#/components/schemas/Document'
          type: array
        checksum:
          description: |
            Hash calculated by SHA256 (previous Obit checksum + Obit data).
          type: string
      required:
      - manufacturer
      - part_number
      - serial_number
      type: object
    ObitHistory:
      description: New Obit request payload.
      example:
        updated_at: 2020-01-01T13:24:35Z
        old_values: "{}"
        created_at: 2020-01-01T13:24:35Z
        event: created
        new_values: "{}"
        obit_did: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
      properties:
        obit_did:
          description: OBADA decentralized identifier (max length Rohi?)
          example: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
          maxLength: 256
          type: string
        event:
          description: History event
          example: created
          type: string
        old_values:
          type: object
        new_values:
          type: object
        created_at:
          example: 2020-01-01T13:24:35Z
          format: date-time
          type: string
        updated_at:
          example: 2020-01-01T13:24:35Z
          format: date-time
          type: string
      type: object
    SaveObitRequest:
      description: Request to save Obit
      example:
        address: address
        documents:
        - name: Link to device wipe report
          document_file: document_file
          should_encrypt: false
        - name: Link to device wipe report
          document_file: document_file
          should_encrypt: false
        part_number: MWCN2LL/A
        serial_number: f6fc84c9f21c24907d6bee6eec38cabab5fa9a7be8c4a7827fe9e56f245bd2d5
        manufacturer: Sony
      properties:
        manufacturer:
          description: Waiting more specific details from Rohi
          example: Sony
          type: string
        part_number:
          description: "Manufacturer provided. In cases where no part number is provided\
            \ for the product, use model, or the most specific ID available from the\
            \ manufacturer. MWCN2LL/A (an iPhone 11 Pro, Silver, 256GB, model A2160)"
          example: MWCN2LL/A
          type: string
        serial_number:
          description: Serial number hashed with sha256 hash function
          example: f6fc84c9f21c24907d6bee6eec38cabab5fa9a7be8c4a7827fe9e56f245bd2d5
          type: string
        documents:
          items:
            $ref: '#/components/schemas/DeviceDocument'
          type: array
        address:
          type: string
      required:
      - manufacturer
      - part_number
      - serial_number
      type: object
    NFT:
      description: OBADA NFT
      example:
        data:
          usn: usn
          documents:
          - name: name
            uri: uri
            hash: hash
          - name: name
            uri: uri
            hash: hash
          checksum: checksum
          trust_anchor_token: trust_anchor_token
        class_id: class_id
        uri_hash: uri_hash
        id: id
        uri: uri
      properties:
        class_id:
          type: string
        id:
          type: string
        uri:
          type: string
        uri_hash:
          type: string
        data:
          $ref: '#/components/schemas/NFT_data'
      type: object
    SendNFTRequest:
      description: Transfer NFT payload
      example:
        receiver: receiver
      properties:
        receiver:
          description: OBADA blockchain receiver address
          type: string
      required:
      - receiver
      type: object
    Account:
      description: OBADA account
      example:
        address: address
        balance: 0
        name: My test account
        nft_count: 6
        pub_key: pub_key
      properties:
        name:
          description: Account address associated name
          example: My test account
          type: string
        pub_key:
          description: Public key
          type: string
        address:
          description: OBADA address
          type: string
        balance:
          format: int64
          type: integer
        nft_count:
          format: int64
          type: integer
      type: object
    NotAuthorized:
      description: A typical 401 error.
      properties:
        error:
          default: Not authorized
          type: string
      type: object
    InternalServerError:
      description: A typical 500 error.
      properties:
        error:
          default: Internal Server Error
          type: string
      type: object
    UnprocessableEntity:
      description: A typical 422 error.
      properties:
        error:
          default: data validation error
          type: string
        fields:
          items:
            $ref: '#/components/schemas/UnprocessableEntity_fields_inner'
          type: array
      type: object
    NewMnemonic:
      description: Mnemonic for seeding the wallet response
      example:
        mnemonic: fantasy route flavor zoo laptop rent knife stick fancy flame black
          fan oval stairs express identify crane truly anxiety wave notable gather
          toe tag
        force: false
      properties:
        mnemonic:
          description: Mnemonic for seeding
          example: fantasy route flavor zoo laptop rent knife stick fancy flame black
            fan oval stairs express identify crane truly anxiety wave notable gather
            toe tag
          type: string
        force:
          default: false
          description: "Flag that specify if exisiting wallet should be replaced,\
            \ if false is send then error will be send back"
          type: boolean
      required:
      - mnemonic
      type: object
    AccountBalance:
      description: OBADA Account balance
      example:
        address: address
        balance: 0
      properties:
        address:
          type: string
        balance:
          format: int64
          type: integer
      type: object
    Accounts:
      example:
        hd_accounts:
        - address: address
          balance: 0
          name: My test account
          nft_count: 6
          pub_key: pub_key
        - address: address
          balance: 0
          name: My test account
          nft_count: 6
          pub_key: pub_key
        imported_accounts:
        - address: address
          balance: 0
          name: My test account
          nft_count: 6
          pub_key: pub_key
        - address: address
          balance: 0
          name: My test account
          nft_count: 6
          pub_key: pub_key
      properties:
        hd_accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        imported_accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
      type: object
    ExportAccountResponse:
      description: OBADA account export response
      example:
        private_key: private_key
      properties:
        private_key:
          description: OBADA account
          type: string
      type: object
    WalletExistsError:
      description: Returns when trying to create or import HD wallet into setteld
        user profile.
      properties:
        error:
          default: profile wallet already exist
          type: string
      type: object
    Profile:
      description: ClientHelper user profile
      example:
        id: id
        email: john.doe@obada.io
      properties:
        id:
          description: Profile owner id
          type: string
        email:
          description: "Profile owner email, will be used for verification purpose"
          example: john.doe@obada.io
          type: string
      required:
      - email
      type: object
    GenerateObitChecksumResponse:
      description: Obit checksum with logged data
      example:
        checksum: ""
        compute_log: ""
      properties:
        checksum:
          description: Obit checksum
          example: ""
          type: string
        compute_log:
          description: Log that contain captures from SDK
          example: ""
          type: string
      type: object
    GenerateObitDIDResponse:
      description: Returns steps that used for DID generation
      example:
        usn: ""
        usn_base58: ""
        serial_number_hash: ""
        did: ""
      properties:
        serial_number_hash:
          description: Serial Number Hash is sha256 of the Serial Number input
          example: ""
          type: string
        usn:
          description: Universal Serial Number
          example: ""
          type: string
        did:
          description: DID
          example: ""
          type: string
        usn_base58:
          description: Base58
          example: ""
          type: string
      type: object
    Document:
      description: Document hashlink
      example:
        encrypted: true
        name: Link to device wipe report
        uri: uri
        hash: hash
      properties:
        name:
          description: Associative name of file
          example: Link to device wipe report
          type: string
        uri:
          description: Link to the document
          type: string
        hash:
          description: Hash of the file
          type: string
        encrypted:
          description: If true then client helper will encrypt document with account
            key
          type: boolean
      type: object
    NotFound:
      description: A typical 404 error.
      properties:
        error:
          default: Not found
          type: string
      type: object
    DeviceDocument:
      description: Device Document
      example:
        name: Link to device wipe report
        document_file: document_file
        should_encrypt: false
      properties:
        name:
          description: Associative name of device document
          example: Link to device wipe report
          type: string
        document_file:
          format: base64
          type: string
        should_encrypt:
          default: false
          description: If true then client helper will encrypt document with account
            key
          type: boolean
      required:
      - document_file
      - name
      type: object
    NFTDocument:
      description: OBADA NFT document
      example:
        name: name
        uri: uri
        hash: hash
      properties:
        name:
          type: string
        uri:
          type: string
        hash:
          type: string
      type: object
    history_200_response:
      example:
        data:
        - updated_at: 2020-01-01T13:24:35Z
          old_values: "{}"
          created_at: 2020-01-01T13:24:35Z
          event: created
          new_values: "{}"
          obit_did: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
        - updated_at: 2020-01-01T13:24:35Z
          old_values: "{}"
          created_at: 2020-01-01T13:24:35Z
          event: created
          new_values: "{}"
          obit_did: did:obada:fe096095-e0f0-4918-9607-6567bd5756b5
      properties:
        data:
          items:
            $ref: '#/components/schemas/ObitHistory'
          type: array
      type: object
    Obits_meta:
      example:
        per_page: 6
        total: 0
        last_page: 5
        current_page: 1
      properties:
        total:
          type: integer
        per_page:
          type: integer
        current_page:
          type: integer
        last_page:
          type: integer
      type: object
    NFT_data:
      example:
        usn: usn
        documents:
        - name: name
          uri: uri
          hash: hash
        - name: name
          uri: uri
          hash: hash
        checksum: checksum
        trust_anchor_token: trust_anchor_token
      properties:
        trust_anchor_token:
          type: string
        usn:
          type: string
        checksum:
          type: string
        documents:
          items:
            $ref: '#/components/schemas/NFTDocument'
          type: array
      type: object
    UnprocessableEntity_fields_inner:
      properties:
        field:
          default: serial_number
          type: string
        error:
          default: serial_number is required field
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
