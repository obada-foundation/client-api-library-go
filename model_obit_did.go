/*
 * OBADA Client Helper API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: techops@obada.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/obada-foundation/client-api-library-go

import (
	"encoding/json"
)

// ObitDid struct for ObitDid
type ObitDid struct {
	// OBADA decentralized identifier (max length Rohi?)
	ObitDid string `json:"obit_did"`
}

// NewObitDid instantiates a new ObitDid object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObitDid(obitDid string) *ObitDid {
	this := ObitDid{}
	this.ObitDid = obitDid
	return &this
}

// NewObitDidWithDefaults instantiates a new ObitDid object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObitDidWithDefaults() *ObitDid {
	this := ObitDid{}
	return &this
}

// GetObitDid returns the ObitDid field value
func (o *ObitDid) GetObitDid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObitDid
}

// GetObitDidOk returns a tuple with the ObitDid field value
// and a boolean to check if the value has been set.
func (o *ObitDid) GetObitDidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ObitDid, true
}

// SetObitDid sets field value
func (o *ObitDid) SetObitDid(v string) {
	o.ObitDid = v
}

func (o ObitDid) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["obit_did"] = o.ObitDid
	}
	return json.Marshal(toSerialize)
}

type NullableObitDid struct {
	value *ObitDid
	isSet bool
}

func (v NullableObitDid) Get() *ObitDid {
	return v.value
}

func (v *NullableObitDid) Set(val *ObitDid) {
	v.value = val
	v.isSet = true
}

func (v NullableObitDid) IsSet() bool {
	return v.isSet
}

func (v *NullableObitDid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObitDid(val *ObitDid) *NullableObitDid {
	return &NullableObitDid{value: val, isSet: true}
}

func (v NullableObitDid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObitDid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


