/*
 * OBADA Client Helper API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: techops@obada.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LocalObitStructuredData A record that represent key/value structure data record
type LocalObitStructuredData struct {
	// Structure data key
	Key string `json:"key"`
	// Structure data value as a json string
	Value string `json:"value"`
}

// NewLocalObitStructuredData instantiates a new LocalObitStructuredData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalObitStructuredData(key string, value string, ) *LocalObitStructuredData {
	this := LocalObitStructuredData{}
	this.Key = key
	this.Value = value
	return &this
}

// NewLocalObitStructuredDataWithDefaults instantiates a new LocalObitStructuredData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalObitStructuredDataWithDefaults() *LocalObitStructuredData {
	this := LocalObitStructuredData{}
	return &this
}

// GetKey returns the Key field value
func (o *LocalObitStructuredData) GetKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *LocalObitStructuredData) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *LocalObitStructuredData) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *LocalObitStructuredData) GetValue() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *LocalObitStructuredData) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *LocalObitStructuredData) SetValue(v string) {
	o.Value = v
}

func (o LocalObitStructuredData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableLocalObitStructuredData struct {
	value *LocalObitStructuredData
	isSet bool
}

func (v NullableLocalObitStructuredData) Get() *LocalObitStructuredData {
	return v.value
}

func (v *NullableLocalObitStructuredData) Set(val *LocalObitStructuredData) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalObitStructuredData) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalObitStructuredData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalObitStructuredData(val *LocalObitStructuredData) *NullableLocalObitStructuredData {
	return &NullableLocalObitStructuredData{value: val, isSet: true}
}

func (v NullableLocalObitStructuredData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalObitStructuredData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


