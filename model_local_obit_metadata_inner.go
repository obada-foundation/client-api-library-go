/*
OBADA Client Helper API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
Contact: techops@obada.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/obada-foundation/client-api-library-go

import (
	"encoding/json"
)

// LocalObitMetadataInner A record that represent key/value metadata record
type LocalObitMetadataInner struct {
	// Metadata key
	Key string `json:"key"`
	// Matadata value
	Value string `json:"value"`
}

// NewLocalObitMetadataInner instantiates a new LocalObitMetadataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalObitMetadataInner(key string, value string) *LocalObitMetadataInner {
	this := LocalObitMetadataInner{}
	this.Key = key
	this.Value = value
	return &this
}

// NewLocalObitMetadataInnerWithDefaults instantiates a new LocalObitMetadataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalObitMetadataInnerWithDefaults() *LocalObitMetadataInner {
	this := LocalObitMetadataInner{}
	return &this
}

// GetKey returns the Key field value
func (o *LocalObitMetadataInner) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *LocalObitMetadataInner) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *LocalObitMetadataInner) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *LocalObitMetadataInner) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *LocalObitMetadataInner) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *LocalObitMetadataInner) SetValue(v string) {
	o.Value = v
}

func (o LocalObitMetadataInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableLocalObitMetadataInner struct {
	value *LocalObitMetadataInner
	isSet bool
}

func (v NullableLocalObitMetadataInner) Get() *LocalObitMetadataInner {
	return v.value
}

func (v *NullableLocalObitMetadataInner) Set(val *LocalObitMetadataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalObitMetadataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalObitMetadataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalObitMetadataInner(val *LocalObitMetadataInner) *NullableLocalObitMetadataInner {
	return &NullableLocalObitMetadataInner{value: val, isSet: true}
}

func (v NullableLocalObitMetadataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalObitMetadataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


